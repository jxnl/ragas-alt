[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"
backend-path = ["."]

[project]
name = "ragas-alt"  # Replace with your actual project name
version = "0.1.0"
description = "A short description of your project." # Replace with your actual description
readme = "README.md" # Optional: if you have a README.md
requires-python = ">=3.8"
license = {text = "MIT"} # Or any other license
authors = [
    {name = "Your Name", email = "you@example.com"}, # Replace with your details
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]

dependencies = [
    # Add your project's core dependencies here, e.g.:
    # "requests>=2.20.0",
    # "numpy",
]

[project.optional-dependencies]
test = [
    "pytest>=7.0",
    "pytest-cov",
    "pytest-asyncio",
    # Add other test-specific dependencies here
]
lint = [
    "ruff",
    "mypy",
    # Add other linting/formatting dependencies here
]
docs = [
    "mkdocs",
    # Add other documentation-specific dependencies here, e.g.:
    # "mkdocs-material",
]

[project.urls]
"Homepage" = "https://github.com/yourusername/ragas-alt"  # Replace with your project's URL
"Bug Tracker" = "https://github.com/yourusername/ragas-alt/issues" # Replace

# You can add tool-specific configurations below, for example:
# [tool.pytest.ini_options]
# minversion = "6.0"
# addopts = "-ra -q"
# testpaths = [
#     "tests",
# ]

# [tool.ruff]
# line-length = 88
# select = ["E", "F", "W", "I", "UP", "PL", "N"] # Example rule set
# ignore = []

# [tool.mypy]
# python_version = "3.10"
# warn_return_any = true
# warn_unused_configs = true 